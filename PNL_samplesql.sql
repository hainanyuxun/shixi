WITH sampled_accounts AS (
    SELECT
        a.ID AS ACCOUNT_ID,
        a.ACCOUNTCLOSEDATE,
        a.ACCOUNTOPENDATE,
        CASE WHEN a.ACCOUNTCLOSEDATE IS NULL THEN 0 ELSE 1 END AS churn_flag
    FROM (
        SELECT
            a.*,
            ROW_NUMBER() OVER (
                PARTITION BY CASE WHEN a.ACCOUNTCLOSEDATE IS NULL THEN 0 ELSE 1 END
                ORDER BY ORA_HASH(a.ID)
            ) AS rn
        FROM beamaccount a
        WHERE a.TENANTID IN (58857, 58877, 58878, 78879)
    ) a
    WHERE a.rn <= 15
)
SELECT
    pnl.ACCOUNTID,
    pnl.BE_ASOF,
    pnl.ASSETCLASSLEVEL1,
    SUM(pnl.BOOKMARKETVALUEPERIODEND) AS DAY_BOOK_MARKET_VALUE,
    AVG(pnl.AVERAGEBOOKUNITCOST) AS AVG_BOOK_UNIT_COST,
    SUM(pnl.QUANTITY) AS TOTAL_DAILY_QUANTITY,
    SUM(pnl.BOOKUGL) AS DAILY_BOOKUGL,
    AVG(pnl.BOOKPRICEPERIODEND) AS AVG_BOOK_PRICE_PERIODEND,
    SUM(pnl.ORIGINALCOST) AS DAILY_ORIGINAL_COST_SUM
FROM sampled_accounts sa
JOIN SNAPSHOT sn 
    ON sn.ACCOUNTID = sa.ACCOUNT_ID
    AND sn.BE_CURRIND = 'Y'
    AND sn.DATACLASS = 'PROFITANDLOSSLITE'
JOIN SNAPSHOTREASON sr 
    ON sr.ID = sn.BE_SNAPSHOTREASON
    AND sr.CODE = 'EOD'
JOIN PROFITANDLOSSLITE pnl 
    ON pnl.BE_SNAPSHOTID = sn.ID
WHERE (
    sa.churn_flag = 1
    AND pnl.BE_ASOF >= ADD_MONTHS(sa.ACCOUNTCLOSEDATE, -12)
    AND pnl.BE_ASOF <= sa.ACCOUNTCLOSEDATE
)
OR (
    sa.churn_flag = 0
    AND pnl.BE_ASOF >= ADD_MONTHS(TRUNC(SYSDATE), -12)
)
GROUP BY
    pnl.ACCOUNTID,
    pnl.BE_ASOF,
    pnl.ASSETCLASSLEVEL1
ORDER BY
    pnl.ACCOUNTID,
    pnl.BE_ASOF,
    pnl.ASSETCLASSLEVEL1;
